<div class="mega-container">

  <div class="profile-card">
    <div id="whenresponsive" onclick="animateSlider()">&rarr;</div>
    <div class="unresponsive">
      <div class="photo">
        <img loading="eager" id="tochange"
          src="http://res.cloudinary.com/dalll4udd/image/upload/v1710588884/ipoktcuzeh7iq9eitau6.png" alt="">
        <form id="uploadForm" action="/upload" method="post" enctype="multipart/form-data"
          style="text-align: center; margin-top:1rem;">
          <label for="fileInput"
            style="cursor: pointer; padding: 10px 20px; background-color: #007bff; color: #fff; border-radius: 5px; border: none; display: inline-block; margin-bottom: 10px;">Change
            Pic</label>
          <input type="file" id="fileInput" name="file" style="display: none;">
          <button type="submit"
            style="padding: 10px 20px; background-color: #007bff; color: #fff; border-radius: 5px; border: none; display: none;">Submit</button>
        </form>

      </div>

      <div>
        <span id="absolutename"></span>


      </div>
    </div>

  </div>




  <div class="con">
    <div id="empty" style="  opacity:0.6; display:none; "><img style=" max-width:100%; place-self:center;"
        src="/files/static/app/raw/kapa65568/server/kpo576455zz545/images/empty.png" alt=""></div>
    <div class="grid-container-2">
      <!-- Blog Card 1 -->

      {{#each this.blogs}}

      <div class="card">
        <div class="thumbnail">
          <img loading="lazy" src={{this.blogPhoto}} alt="">
        </div>


        <div class="card-content">
          <div class="author">
            <img loading="lazy" id="authorPhoto" src={{this.authorPhoto}} alt="">
            <span>{{this.author}}</span>
            <span>{{this.date}}</span>
          </div>

          <div class="header blog-heading">
            {{this.title}}
          </div>





          <div class="card-footer" id={{this.slug}}>
            <a href={{concate '/views/blog/' this.slug }}
              style="color: #007bff; text-decoration: none; display: inline-block;">Read
              More </a>


            <img src="/files/static/app/raw/kapa65568/server/kpo576455zz545/images/like.png" onclick="uno()" alt="">
            <img onclick="clicko()" src="/files/static/app/raw/kapa65568/server/kpo576455zz545/images/del.png" alt="">
            <a href="{{concate '/user/update/blog/' this.slug }}" hidden class="update">Update</a>
            <img onclick="updato()" src="/files/static/app/raw/kapa65568/server/kpo576455zz545/images/edit.png" alt="">

          </div>

        </div>

      </div>
      {{/each}}





    </div>
  </div>
</div>

<script>

  function updato() {

    const elem = event.target;
    const parent = elem.parentNode.id;
    const link = "/user/update/blog/" + parent;
    window.location.href = link;


  }



  var x = window.matchMedia("(max-width: 700px)")
  x.addEventListener("change", function () {
    document.querySelector(".profile-card").style.width = "10rem";
    document.querySelector(".unresponsive").style.display = "block";
    document.querySelector(".profile-card").style.animation = "slider 2s";
    document.querySelector(".profile-card").style.width = "10rem";



  });

  function animateSlider() {


    const card = document.querySelector(".unresponsive");
    const procard = document.querySelector(".profile-card");
    if (card.style.display != "block") {
      card.style.display = "block";


      procard.style.animation = "slider 2s";

      procard.style.width = "10rem";
      procard.style.position = "relative";
      procard.style.zIndex = "5";
      return;



    }
    procard.style.width = "2rem";

    card.style.display = "none";

    return;
  }


  async function clicko() {



    const targetElement = event.target;
    const parent = targetElement.parentNode;
    const children = parent.children;
    const url = children[0].href;
    console.log(url, targetElement, parent, children[0]);



    var newUrl = url.split("/")
    const slug = newUrl.pop();
    console.log(slug);
    newurl = "/user/delete/blog/" + slug;
    const data = {
      action: "delete"
    }

    const response = await fetch(newurl, {
      method: "POST",
      headers: {
        "Content-type": "application/json"
      },
      body: JSON.stringify(data)
    })


    console.log(response)
    window.location.href = "/user/myaccount";



  }





  document.getElementById('fileInput').addEventListener('change', function () {
    const fileInput = this;
    const submitButton = document.querySelector('button[type="submit"]');

    if (fileInput.files.length > 0) {
      submitButton.style.display = 'inline-block';
    } else {
      submitButton.style.display = 'none';
    }
  });

  document.getElementById('uploadForm').addEventListener('submit', function (event) {
    // Prevent default form submission behavior
    // Here you can add further validation or submission logic if needed
    document.getElementById('fileInput').addEventListener('change', function () {
      const fileInput = this;
      const submitButton = document.querySelector('button[type="submit"]');


    });
    window.location.href = "/user/create";



  });


  function uno() {

    const elm = event.target;
    const arr = elm.src.split("/").pop();
    console.log(arr);
    if (arr == "like.png") {
      elm.src = "/files/static/app/raw/kapa65568/server/kpo576455zz545/images/like2.png";
      return
    }
    elm.src = "/files/static/app/raw/kapa65568/server/kpo576455zz545/images/like.png";



  }

  async function common() {
    try {
      const res = await fetch("/info");
      const data = await res.json();
      if (data.svg == true) {
        document.querySelector("#empty").style.display = "grid";
      }
      document.getElementById("tochange").src = data.photo;
      document.getElementById("absolutename").innerText = "USER: " + data.name;
    }
    catch (err) {
      console.log("00");
    }

  }
  common();



</script>